name: Deploy to Production with Zero Downtime

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  PROJECT_DIR: "/root/2025-backend-template"
  PORT_A: 4040
  PORT_B: 4041
  KEEP_RELEASES: 5
  HEALTH_CHECK_PATH: "/"
  BUILD_COMMAND: "/usr/local/go/bin/go build -o main ."

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          port: ${{ secrets.PORT }}
          script: |
            set -e

            RELEASES_DIR="${{ env.PROJECT_DIR }}/releases"
            STATE_DIR="${{ env.PROJECT_DIR }}/state"
            RELEASE_ID=$(date +%Y%m%d%H%M%S)
            RELEASE_DIR="$RELEASES_DIR/$RELEASE_ID"
            LIVE_PORT_FILE="$STATE_DIR/live.port"
            PID_STATE_FILE="$STATE_DIR/app.pid"
            # NGINX İÇİN YENİ VE İZOLE EDİLMİŞ YOL
            UPSTREAM_CONF_FILE="/etc/nginx/includes/backend_upstream.conf"

            echo "🚀 Deployment Başlatılıyor: Release ID $RELEASE_ID"

            mkdir -p $RELEASES_DIR
            mkdir -p $STATE_DIR

            echo "⬇️  Kod Klonlanıyor ve Build Ediliyor..."
            git clone https://github.com/${{ github.repository }}.git $RELEASE_DIR
            cd $RELEASE_DIR
            if [ -f "${{ env.PROJECT_DIR }}/.env" ]; then
              cp "${{ env.PROJECT_DIR }}/.env" .
            fi
            ${{ env.BUILD_COMMAND }}
            echo "✅ Build tamamlandı."

            CURRENT_PORT=$(cat $LIVE_PORT_FILE || echo "${{ env.PORT_A }}")
            NEW_PORT=$([ "$CURRENT_PORT" = "${{ env.PORT_A }}" ] && echo "${{ env.PORT_B }}" || echo "${{ env.PORT_A }}")
            echo "🔄 Port Değişimi: Mevcut Port: $CURRENT_PORT -> Yeni Port: $NEW_PORT"

            echo "🩺 Yeni versiyon $NEW_PORT portunda başlatılıyor..."
            # Yeni uygulamanın PID'sini kendi release klasöründe geçici olarak sakla
            NEW_PID_TEMP_FILE="$RELEASE_DIR/app.pid"
            (cd $RELEASE_DIR && PORT=$NEW_PORT nohup ./main &> app.log & echo $! > $NEW_PID_TEMP_FILE)

            sleep 10 # Uygulamanın başlaması için bekle

            HEALTH_CHECK_URL="http://localhost:$NEW_PORT${{ env.HEALTH_CHECK_PATH }}"
            echo "🔎 Sağlık kontrolü yapılıyor: $HEALTH_CHECK_URL"
            if ! curl -s --fail --retry 5 --retry-delay 3 $HEALTH_CHECK_URL; then
              echo "❌ Sağlık kontrolü BAŞARISIZ! Deployment geri alınıyor."
              NEW_PID=$(cat $NEW_PID_TEMP_FILE)
              kill $NEW_PID
              rm -rf $RELEASE_DIR
              exit 1
            fi
            echo "✅ Sağlık kontrolü BAŞARILI."

            # Eski sürecin PID'sini durum dosyasından oku
            OLD_PID=$(cat $PID_STATE_FILE || echo "")

            echo "🔄 Nginx yeni porta yönlendiriliyor..."
            echo "server 127.0.0.1:$NEW_PORT;" | sudo tee $UPSTREAM_CONF_FILE
            sudo nginx -s reload
            echo "✅ Nginx başarıyla $NEW_PORT portuna yönlendirildi."

            # Eski süreci PID'si ile güvenli bir şekilde durdur
            if [ -n "$OLD_PID" ]; then
                echo "🛑 Eski versiyon (PID: $OLD_PID, Port: $CURRENT_PORT) durduruluyor..."
                if ps -p $OLD_PID > /dev/null; then
                   kill $OLD_PID
                   echo "✅ Eski süreç durduruldu."
                else
                   echo "ℹ️  Eski PID ($OLD_PID) zaten çalışmıyor."
                fi
            else
                echo "ℹ️  Durdurulacak eski bir süreç bulunamadı."
            fi

            # Durum dosyalarını yeni deploy için güncelle
            echo $NEW_PORT > $LIVE_PORT_FILE
            mv $NEW_PID_TEMP_FILE $PID_STATE_FILE

            echo "🧹 Eski versiyonlar temizleniyor..."
            cd $RELEASES_DIR && ls -1tr | head -n -${{ env.KEEP_RELEASES }} | xargs -r rm -rf

            echo "🎉 Deployment başarıyla tamamlandı! Canlı port: $NEW_PORT"
