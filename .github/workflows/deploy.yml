name: Deploy to Production

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  # Sunucudaki ana proje klas√∂r√ºn√ºz
  PROJECT_DIR: "/root/2025-backend-template"
  # Systemd servisinizin tam adƒ±
  SERVICE_NAME: "backend-template.service"
  # Yeni kodun test edileceƒüi ge√ßici port
  TEST_PORT: 4041
  # Sunucuda ka√ß eski versiyonun tutulacaƒüƒ±
  KEEP_RELEASES: 5
  # Uygulamanƒ±zƒ±n saƒülƒ±k kontrol√º i√ßin endpoint'i
  HEALTH_CHECK_PATH: "/"
  # Go build komutu
  BUILD_COMMAND: "/usr/local/go/bin/go build -o main ."

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          port: ${{ secrets.PORT }}
          script: |
            set -e

            RELEASES_DIR="${{ env.PROJECT_DIR }}/releases"
            CURRENT_LINK="${{ env.PROJECT_DIR }}/current"
            RELEASE_ID=$(date +%Y%m%d%H%M%S)
            RELEASE_DIR="$RELEASES_DIR/$RELEASE_ID"

            echo "üöÄ Starting deployment of release: $RELEASE_ID"

            # 1. Kodu klonla ve build et
            sudo mkdir -p $RELEASE_DIR && cd $RELEASE_DIR
            sudo git clone https://github.com/${{ github.repository }}.git .
            echo "üî® Building application..."
            sudo ${{ env.BUILD_COMMAND }}

            # 2. Uygulamayƒ± TEST portunda ge√ßici olarak ba≈ülat
            echo "ü©∫ Starting app on TEST_PORT (${{ env.TEST_PORT }}) for health check..."
            sudo PORT=${{ env.TEST_PORT }} nohup ./main &> /dev/null &
            APP_PID=$!

            # 3. Saƒülƒ±k kontrol√º yap
            sleep 5
            HEALTH_CHECK_URL="http://localhost:${{ env.TEST_PORT }}${{ env.HEALTH_CHECK_PATH }}"
            if ! curl -s --fail --retry 5 --retry-delay 3 $HEALTH_CHECK_URL; then
                echo "‚ùå Health check failed on TEST_PORT!"
                sudo kill $APP_PID
                sudo rm -rf $RELEASE_DIR
                exit 1
            fi

            echo "‚úÖ Health check successful. Switching to live..."
            sudo kill $APP_PID

            # 4. 'current' linkini deƒüi≈ütir ve ana servisi restart et
            sudo ln -sfn $RELEASE_DIR $CURRENT_LINK
            sudo systemctl restart ${{ env.SERVICE_NAME }}
            echo "üéâ Deployment successful!"

            # 5. Eski versiyonlarƒ± temizle
            echo "üßπ Cleaning up old releases..."
            cd $RELEASES_DIR && ls -1tr | head -n -${{ env.KEEP_RELEASES }} | xargs -r sudo rm -rf
